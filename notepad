Learn HTML by Building a Cat Photo App:
The lower the number, the higher the importance, so h2 elements have less importance than h1 elements.
Example Code

<h1>most important heading element</h1>
<h2>second most important heading element</h2>
<h3>third most important heading element</h3>
<h4>fourth most important heading element</h4>
<h5>fifth most important heading element</h5>
<h6>least important heading element</h6>
Only use one h1 element per page and place lower importance headings below higher importance headings.

The p element is used to create a paragraph of text on websites.

HTML5 has some elements that identify different content areas. These elements make your HTML easier to read and help with Search Engine Optimization (SEO) and accessibility.
The <main> element is used to represent the main content of the body of an HTML document. Content inside the main element should be unique to the document and should not be repeated in other parts of the document.

<img> elements have an opening tag without a closing tag. An element without a closing tag is known as a void element.

Add an anchor element that links to https://freecatphotoapp.com. At this point, the link wonâ€™t show up in the preview. A link's text must be placed between the opening and closing tags of an anchor (a) element.
The target attribute specifies where to open the linked document. target="\_blank" opens the linked document in a new tab or window.

Before adding any new content, you should make use of a section element to separate the present content from the future content.
The section element is used to define sections in a document, such as chapters, headers, footers, or any other sections of the document. It is a semantic element that helps with SEO and accessibility.

When you add a lower rank heading element to the page, it's implied that you're starting a new subsection.

The figure element represents self-contained content and will allow you to associate an image with a caption.
Nest the image you just added within a figure element.
A figure caption (figcaption) element is used to add a caption to describe the image contained within the figure element.
Here is an example of a figcaption element with the caption of A cute cat:
Example Code

<figure>
  <img src="image.jpg" alt="A description of the image">
  <figcaption>A cute cat</figcaption>
</figure>

To place emphasis on a specific word or phrase, you can use the em element. by wrapping it in an emphasis <em> element.
The strong element is used to indicate that some text is of strong importance or urgent. by wrapping it in a <strong> element.

list items in an ordered list are numbered when displayed.

The form element is used to get information from a user like their name, email, and other details.
The action attribute indicates where form data should be sent.
Here is an example of a form element with an action attribute:
Example Code

<form action="/submit-url"></form>
In the example, action="/submit-url" tells the browser that the form data should be sent to the path /submit-url.
The input element allows you several ways to collect data from a web form. Like img elements, input elements are a void element and do not need closing tags.
Nest an input element in the form element.
In order for a form's data to be accessed by the location specified in the action attribute, you must give the text field a name attribute and assign it a value to represent the data being submitted.
To prevent a user from submitting your form when required information is missing, you need to add the required attribute to an input element. There's no need to set a value to the required attribute. Instead, just add the word required to the input element, making sure there is space between it and other attributes.

Add a button element with the text Submit below the input element. The default behavior of clicking a form button without any attributes submits the form to the location specified in the form's action attribute.
However, relying on default behavior may cause confusion. Add the type attribute with the value submit to the button to make it clear that it is a submit button.

both input and button elements are inline elements, which don't appear on new lines.

you can use radio buttons for questions where you want only one answer out of multiple options.
Here is an example of a radio button with the option of cat:
Example Code
<input type="radio"> cat

label elements are used to help associate the text for an input element with the input element itself (especially for assistive technologies like screen readers).
Here is an example of a label element with a radio button:
Example Code
<label><input type="radio"> cat</label>
In the example, clicking on the word "cat" will also select the radio button.

To make it so selecting one radio button automatically deselects the other, both buttons must have a name attribute with the same value.
If you select the Indoor radio button and submit the form, the form data for the button is based on its name and value attributes. Since your radio buttons do not have a value attribute, the form data will include indoor-outdoor=on, which is not useful when you have multiple buttons.
Add a value attribute to both radio buttons. For convenience, set the button's value attribute to the same value as its id attribute.

The fieldset element is used to group related inputs and labels together in a web form. fieldset elements are block-level elements, meaning that they appear on a new line.
The legend element acts as a caption for the content in the fieldset element. It gives users context about what they should enter into that part of the form.

Forms commonly use checkboxes for questions that may have more than one answer. The input element with a type attribute set to checkbox creates a checkbox.

There's another way to associate an input element's text with the element itself. You can nest the text within a label element and add a for attribute with the same value as the input element's id attribute.
<input id="loving" type="checkbox">
<label for="loving">Loving</label>

Like radio buttons, form data for selected checkboxes are name / value attribute pairs. While the value attribute is optional, it's best practice to include it with any checkboxes or radio buttons on the page.

In order to make a checkbox checked or radio button selected by default, you need to add the checked attribute to it.
Here is an example of a radio button with the checked attribute:
Example Code
<input checked type="radio" name="meal" value="breakfast"> Breakfast

The footer element is used to define a footer for a document or section. A footer typically contains information about the author of the document, copyright data, links to terms of use, contact information, and more.

All page content elements that should be rendered to the page go inside the body element.
However, other important information goes inside the head element.
The head element is used to contain metadata about the document, such as its title, links to stylesheets, and scripts.
Metadata is information about the page that isn't displayed directly on the page.
The title element determines what browsers show in the title bar or tab for the page.

Notice that the entire contents of the page are nested within an html element. The html element is the root element of an HTML page and wraps all content on the page.
You can also specify the language of your page by adding the lang attribute to the html element.
Add the lang attribute with the value en to the opening html tag to specify that the language of the page is English.

All pages should begin with <!DOCTYPE html>. This special string is known as a declaration and ensures the browser tries to meet industry-wide specifications.

<!DOCTYPE html> tells browsers that the document is an HTML5 document which is the latest version of HTML.

You can set browser behavior by adding meta elements in the head. Here's an example:
Example Code

<meta attribute="value">
Inside the head element, nest a meta element with an attribute named charset. Set to the value to utf-8 which tells the browser how to encode characters for the page.
Note that the meta element is a void element.
You have completed the Cat Photo App project. Congratulations!


Learn Basic CSS by Building a Cafe Menu:
CSS is the language used to style an HTML document. It describes how HTML elements should be displayed on the screen.

The title is one of several elements that provide extra information not visible on the web page, but it is useful for search engines or how the page gets displayed.  

You can add style to an element by specifying it in the style element and setting a property for it like this:
Example Code
element {
property: value;
}

You can add the same group of styles to many elements by creating a list of selectors. Each selector is separated with commas like this:
Example Code
selector1, selector2 {
property: value;
}

Since there will be many more styles, it's best to put all the styles in a separate file and link to it.
Make sure to exclude the opening and closing style tags.

Now you need to link the styles.css file, so the styles will be applied again. Inside the head element, add a link element. Give it a rel attribute with the value of "stylesheet" and a href attribute with the value of "styles.css"

For the styling of the page to look similar on mobile as it does on a desktop or laptop, you need to add a meta element with a special content attribute.
Add the following within the head element:
Example Code

<meta name="viewport" content="width=device-width, initial-scale=1.0" />

The <div> element is used mainly for design layout purposes unlike the other content elements you have used so far.

The goal is to make the div not take up the entire width of the page. The CSS width property is perfect for this.

You can use the id selector to target a specific element with an id attribute. An id selector is defined by placing the hash symbol # directly in front of the element's id value. For example, if an element has the id of cat then you would target that element like this:
Example Code
#cat {
width: 250px;
}

Comments in CSS look like this:
Example Code
/_ comment here _/

Currently, the width of the #menu element is specified in pixels (px)
Change the width property's value to be 80%, to make it 80% the width of its parent element (body).

Next, you want to center the #menu horizontally. You can do this by setting its margin-left and margin-right properties to auto. Think of the margin as invisible space around an element.

However, it is more common to use a different selector to style your elements.
A class selector is defined by a name with a dot directly in front of it, like this:
Example Code
.class-name {
styles
}

<article> elements commonly contain multiple elements that have related information. In this case, it will contain a coffee flavor and a price for that flavor.

<p> elements are block-level elements, so they take up the entire width of their parent element.
To get them on the same line, you need to apply some styling to the <p> elements so they behave more like inline elements.

The p elements are nested in an article element with the class attribute of item. You can style all the p elements nested anywhere in elements with a class named item like this:
Example Code
.item p { }

inline-block elements only take up the width of their content. To spread them out, add a width property to the flavor and price class selectors that have a value of 50% each.
Well that did not work. Styling the p elements as inline-block and placing them on separate lines in the code creates an extra space to the right of the first p element, causing the second one to shift to the next line. One way to fix this is to make each p element's width a little less than 50%.

That worked, but there is still a little space on the right of the price.
You could keep trying various percentages for the widths. Instead, use the back space key on your keyboard to move the p element with the class price next to the p element with the class flavor so that they are on the same line in the editor. Make sure there is no space between the two elements.

If you make the width of the page preview smaller, you will notice at some point, some of the text on the left starts wrapping around to the next line. This is because the width of the p elements on the left side can only take up 50% of the space.
Since you know the prices on the right have significantly fewer characters, change the flavor class width value to be 75% and the price class width value to be 25%.

You can give your menu some space between the content and the sides with various padding properties.

The current width of the menu will always take up 80% of the body element's width. On a very wide screen, the coffee and dessert appear far apart from their prices.
Add a max-width property to the menu class with a value of 500px to prevent it from growing too wide.

You can change the font-family of text, to make it look different from the default font of your browser. Each browser has some common fonts available to it.
Change all the text in your body, by adding a font-family property with the value sans-serif. This is a fairly common font that is very readable.

It is a bit boring for all the text to have the same font-family. You can still have the majority of the text sans-serif and make just the h1 and h2 elements different using a different selector. use Impact font.

You can add a fallback value for the font-family by adding another font name separated by a comma. Fallbacks are used in instances where the initial is not found/available.

The typography of heading elements (e.g. h1, h2) is set by default values of users' browsers.
Add two new type selectors (h1 and h2). Use the font-size property for both, but use the value 40px for the h1 and 30px for the h2.

You can use an <hr> element to display a divider between sections of different content.

The default properties of an hr element will make it appear as a thin light grey line. You can change the height of the line by specifying a value for the height property.
Change the height of the hr element to be 3px.

Notice the grey color along the edges of the line. Those edges are known as borders. Each side of an element can have a different color or they can all be the same.

Notice how the thickness of the line looks bigger? The default value of a property named border-width is 1px for all edges of hr elements. By changing the border, the total height of the line is 5px (3px plus the top and bottom border width of 1px).
Change the height property of the hr to be 2px, so the total height of it becomes 4px.

To create a little more room around the menu, add 20px of space on the inside of the body element by using the padding property.

The default color of a link that has not yet been clicked on is typically blue. The default color of a link that has already been visited from a page is typically purple. To make the footer links the same color regardless if a link has been visited, use the value black for the color property.
You can change properties of a link when the link has actually been visited by using a pseudo-selector that looks like a:visited { propertyName: propertyValue; }.
You can change properties of a link when the mouse hovers over them by using a pseudo-selector that looks like a:hover { propertyName: propertyValue; }.
You change properties of a link when the link is actually being clicked by using a pseudo-selector that looks like a:active { propertyName: propertyValue; }.

The menu text CAMPER CAFE has a different space from the top than the address's space at the bottom of the menu. This is due to the browser having some default top margin for the h1 element.

<img> elements are "like" inline elements.
To make the image behave like heading elements (which are block-level), create an img type selector and use the value block for the display property and use the applicable margin-left and margin-right values to center it horizontally.

It would be nice if the vertical space between the h2 elements and their associated icons was smaller. The h2 elements have default top and bottom margin space, so you could change the bottom margin of the h2 elements to say 0 or another number.
There is an easier way, simply add a negative top margin to the img elements to pull them up from their current positions. Negative values are created using a - in front of the value. To complete this project, go ahead and use a negative top margin of 25px in the img type selector.

